<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.peitu.doorplateqrcode.mapper.PicInfoMapper">
    <resultMap id="BaseResultMap" type="com.peitu.doorplateqrcode.entity.PicInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="VARCHAR"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="VARCHAR"/>
        <result column="doorplate_id" property="doorplateId" jdbcType="INTEGER"/>
        <result column="pic_path" property="picPath" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, doorplate_id, pic_path, state
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from pic_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pic_info
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.peitu.doorplateqrcode.entity.PicInfo">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into pic_info (id, gmt_create, gmt_modified,
        doorplate_id, pic_path, state
        )
        values (#{id,jdbcType=INTEGER}, #{gmtCreate,jdbcType=VARCHAR}, #{gmtModified,jdbcType=VARCHAR},
        #{doorplateId,jdbcType=INTEGER}, #{picPath,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.peitu.doorplateqrcode.entity.PicInfo">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into pic_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="doorplateId != null">
                doorplate_id,
            </if>
            <if test="picPath != null">
                pic_path,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=INTEGER},
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=VARCHAR},
            </if>
            <if test="doorplateId != null">
                #{doorplateId,jdbcType=INTEGER},
            </if>
            <if test="picPath != null">
                #{picPath,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.peitu.doorplateqrcode.entity.PicInfo">
        update pic_info
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=VARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=VARCHAR},
            </if>
            <if test="doorplateId != null">
                doorplate_id = #{doorplateId,jdbcType=INTEGER},
            </if>
            <if test="picPath != null">
                pic_path = #{picPath,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.peitu.doorplateqrcode.entity.PicInfo">
    update pic_info
    set gmt_create = #{gmtCreate,jdbcType=VARCHAR},
      gmt_modified = #{gmtModified,jdbcType=VARCHAR},
      doorplate_id = #{doorplateId,jdbcType=INTEGER},
      pic_path = #{picPath,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>